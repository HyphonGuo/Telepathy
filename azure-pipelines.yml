# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- dev

variables:
  solution: 'Telepathy.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  TemplateName: 'Telepathy$(Build.BuildNumber)'

stages:
- stage: Build
  jobs:
  - job: UnitTestPublish
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        maximumCpuCount: true
        msbuildArchitecture: 'x64'

    - task: CmdLine@2
      inputs:
        script: |
          sqllocaldb create MSSQLLocalDB
          sqllocaldb start MSSQLLocalDB
          sqllocaldb info MSSQLLocalDB
      
          "C:\Program Files (x86)\Microsoft SDKs\Azure\Storage Emulator\AzureStorageEmulator.exe" start

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*UnitTest*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        codeCoverageEnabled: true

    - task: PowerShell@2
      displayName: CoreLayerSmokeTest
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)\test\CoreLayerSmokeTest.ps1'
      timeoutInMinutes: 5

    - task: PowerShell@2
      displayName: BrokerLayerSmokeTest
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)\test\BrokerLayerSmokeTest.ps1'
      timeoutInMinutes: 5

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'test\E2ETest\BvtTest'
        artifact: 'BVTArtifact'
        
    - task: PowerShell@2
      inputs:
        filePath: 'create-artifacts.ps1'
        errorActionPreference: 'continue'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'artifacts'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaserviceartifactci'
        ContainerName: 'telepathy/$(Build.BuildNumber)'

    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts/$(buildConfiguration)/registration'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaruntimestorage'
        ContainerName: 'service-registration'
        
    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts/$(buildConfiguration)/ccpservicehost'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaruntimestorage'
        ContainerName: 'runtime/ccpservicehost'

    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts/$(buildConfiguration)/echosvclib'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaruntimestorage'
        ContainerName: 'service-assembly/ccpechosvc'
        
    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: '*/nuspec/*.nuspec'
        versioningScheme: 'byBuildNumber'
        includeSymbols: true

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '06e5804d-ddb8-4741-8e31-a7c09d717338'
        
- stage: Deploy       
  dependsOn: Build 
  jobs:
  - job: HNDeployment
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: none
          
    - task: AzurePowerShell@4
      inputs:
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        ScriptType: 'InlineScript'
        Inline: |
          Connect-AzAccount
          if(Get-AzResourceGroup -Name $(TemplateName)) {
              Remove-AzResourceGroup -Name $(TemplateName) -Force
          }
          $secureString = convertto-securestring $(VMpwd) -asplaintext -force
          New-AzResourceGroup -Name $(TemplateName) -Location $(RGLocation)
          New-AzResourceGroupDeployment -ResourceGroupName $(TemplateName) -TemplateUri $(TemplateUri) -telepathyVMName "Telepathy$(Build.BuildID)" -telepathyVMAdminUserName $(VMadmin) -telepathyVMAdminPassword $secureString -vnetName $(VnetName)  -subnetName "default" -newOrExistingVnet "existing" -vnetResourceGroup $(VnetRGName) -artifactsStorageContainerSasToken $(artifactsStorageContainerSasToken) -artifactsFolderName $(Build.BuildNumber) -artifactsStorageName $(artifactsStorageName) -artifactsStorageContainerName "telepathy"
        errorActionPreference: 'silentlyContinue'
        azurePowerShellVersion: 'LatestVersion'
        
- stage: BVTTest
  dependsOn: Deploy
  jobs:
  - job: BVTTest
    pool: 'Azure Agent'

    steps:
    - checkout: none
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: '[environment]::setenvironmentvariable("HNMachine", "Telepathy$(Build.BuildID)", "User")'
        
    - task: DownloadPipelineArtifact@2
      inputs: 
        buildType: 'current'
        artifactName: 'BVTArtifact'
        targetPath: '$(System.DefaultWorkingDirectory)\BVT'
        
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\BvtTest.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        codeCoverageEnabled: true
        
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: '[environment]::setenvironmentvariable("HNMachine", $null, "User")'        
        
  - job: CleanResource
    pool:
      vmImage: 'windows-latest'
    dependsOn: BvtTest
    steps:
    - checkout: none
    

    - task: AzurePowerShell@4
      inputs:
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        ScriptType: 'InlineScript'
        Inline: 'Remove-AzResourceGroup -Name $(TemplateName) -f'
        errorActionPreference: 'silentlyContinue'
        azurePowerShellVersion: 'LatestVersion'