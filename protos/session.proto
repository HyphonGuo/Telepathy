syntax = "proto3";

package Microsoft.Telepathy.ProtoBuf;

import "google/protobuf/empty.proto";

// The session service definition.
service SessionManager {
	// Create session
	rpc CreateSession (CreateSessionRequest) returns (SessionReply);

	// Attach session
	rpc AttachSession (AttachSessionRequest) returns (SessionReply);

	// Close session
	rpc CloseSession (CloseSessionRequest) returns (google.protobuf.Empty);

	// Create session client queues
	rpc CreateBatchClient (CreateBatchClientRequest) returns (CreateBatchClientReply);

	// Close session client
	rpc CloseBatchClient (CloseBatchClientRequest) returns (google.protobuf.Empty);

	// Set end of request flag for one session client
	rpc ClientEndOfTask (ClientEndOfTaskRequest) returns (google.protobuf.Empty);
}

message SessionInitInfo {
	string service_name = 1;
	string service_version = 2;
	bool durable = 3;
	int32 max_service_instance = 4;
	int32 session_idle_timeout = 5;
	int32 client_idle_timeout = 6;
	string session_creator = 7;
}

message BatchClientIdentity {
	string session_id = 1;
	string client_id = 2;
}
message CreateSessionRequest {
	SessionInitInfo session_init_info = 1;
}

message AttachSessionRequest {
	string session_id = 1;
}

message CloseSessionRequest{
	string session_id = 1;
}

message SessionReply {
	string session_id = 1;
}

message CreateBatchClientRequest {
	BatchClientIdentity batch_client_info = 1;
}

message CloseBatchClientRequest {
	BatchClientIdentity batch_client_info = 1; 
}

message CreateBatchClientReply {
	bool is_ready = 1;
}

message ClientEndOfTaskRequest {
	BatchClientIdentity batch_client_info = 1;
	int32 total_request_number = 2;
}