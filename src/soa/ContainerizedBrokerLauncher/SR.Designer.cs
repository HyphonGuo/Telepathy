//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Telepathy.Internal.ContainerizedBrokerLauncher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Telepathy.Internal.BrokerLauncher.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed. Make sure you are the owner of the session..
        /// </summary>
        internal static string AccessDenied_Broker {
            get {
                return ResourceManager.GetString("AccessDenied_Broker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed. Make sure you have the permission to the broker launcher service..
        /// </summary>
        internal static string AccessDenied_BrokerLauncher {
            get {
                return ResourceManager.GetString("AccessDenied_BrokerLauncher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The broker {0} is in the Finishing state thus cannot attach to the broker..
        /// </summary>
        internal static string BrokerFinishing {
            get {
                return ResourceManager.GetString("BrokerFinishing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The broker node is already offline..
        /// </summary>
        internal static string BrokerIsOffline {
            get {
                return ResourceManager.GetString("BrokerIsOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker service failed to start..
        /// </summary>
        internal static string BrokerServiceFailedStartup {
            get {
                return ResourceManager.GetString("BrokerServiceFailedStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get user SID..
        /// </summary>
        internal static string CannotGetUserSID {
            get {
                return ResourceManager.GetString("CannotGetUserSID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to the scheduler is not ready, it might because the scheduler service is not started or is starting, or HPC broker service is still starting..
        /// </summary>
        internal static string ConnectionToSchedulerIsNotReady {
            get {
                return ResourceManager.GetString("ConnectionToSchedulerIsNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom broker exited before ready. ExitCode = {0}..
        /// </summary>
        internal static string CustomBrokerExitBeforeReady {
            get {
                return ResourceManager.GetString("CustomBrokerExitBeforeReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom broker timeout to get ready. Current timeout is {0}..
        /// </summary>
        internal static string CustomBrokerReadyTimeout {
            get {
                return ResourceManager.GetString("CustomBrokerReadyTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get security descriptor from the job template..
        /// </summary>
        internal static string FailedToGetSecurityDescriptor {
            get {
                return ResourceManager.GetString("FailedToGetSecurityDescriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start broker service process. Win32 error code: {0}..
        /// </summary>
        internal static string FailedToStartBrokerServiceProcess {
            get {
                return ResourceManager.GetString("FailedToStartBrokerServiceProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session id {0} is invalid. Could not find related service job with this id..
        /// </summary>
        internal static string InvalidSessionId {
            get {
                return ResourceManager.GetString("InvalidSessionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to pull data from job properties to build session start info..
        /// </summary>
        internal static string PullDataFromCustomJobPropertyFailed {
            get {
                return ResourceManager.GetString("PullDataFromCustomJobPropertyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CCP_SERVICEREGISTRATION_PATH could not be found in the cluster configuration environments..
        /// </summary>
        internal static string ServiceRegistrationPathEnvironmentMissing {
            get {
                return ResourceManager.GetString("ServiceRegistrationPathEnvironmentMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session  with Id = {0} has already been created..
        /// </summary>
        internal static string SessionIdAlreadyExists {
            get {
                return ResourceManager.GetString("SessionIdAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker storage is closed..
        /// </summary>
        internal static string StorageClosed {
            get {
                return ResourceManager.GetString("StorageClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker storage failed: {0}..
        /// </summary>
        internal static string StorageFailure {
            get {
                return ResourceManager.GetString("StorageFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker storage service is not available..
        /// </summary>
        internal static string StorageServiceNotAvailble {
            get {
                return ResourceManager.GetString("StorageServiceNotAvailble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker storage hits quota limit or is full. If you are using MSMQ, contact your administrator to increase MSMQ storage quota on broker node or clean up session storages manually. Please refer http://support.microsoft.com/kb/899612 to change the quota..
        /// </summary>
        internal static string StorageSpaceNotSufficient {
            get {
                return ResourceManager.GetString("StorageSpaceNotSufficient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get broker worker process within 1 minute..
        /// </summary>
        internal static string TimeoutToGetBrokerWorkerProcess {
            get {
                return ResourceManager.GetString("TimeoutToGetBrokerWorkerProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout to open broker service process..
        /// </summary>
        internal static string TimeoutToOpenBrokerServiceProcess {
            get {
                return ResourceManager.GetString("TimeoutToOpenBrokerServiceProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active sessions runnning on this broker node has reached the up limit {0}..
        /// </summary>
        internal static string TooManyBrokerRunning {
            get {
                return ResourceManager.GetString("TooManyBrokerRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error occured: {0}..
        /// </summary>
        internal static string UnknownError {
            get {
                return ResourceManager.GetString("UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session was originally created with a broker whose persistence version was {0} which is not supported by current broker whose persistence version is {1}..
        /// </summary>
        internal static string UnsupportedVersion {
            get {
                return ResourceManager.GetString("UnsupportedVersion", resourceCulture);
            }
        }
    }
}
