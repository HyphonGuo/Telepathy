//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Hpc.Scheduler.Store {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Hpc.Scheduler.Store.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad type for {0}, bad type is: {1}.
        /// </summary>
        internal static string BadTypeProperty {
            get {
                return ResourceManager.GetString("BadTypeProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a certificate to upload to the scheduler.
        /// </summary>
        internal static string CertificateChooser_Text {
            get {
                return ResourceManager.GetString("CertificateChooser_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Chooser.
        /// </summary>
        internal static string CertificateChooser_Title {
            get {
                return ResourceManager.GetString("CertificateChooser_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string CredentialTypeDialog_CancelButtonString {
            get {
                return ResourceManager.GetString("CredentialTypeDialog_CancelButtonString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a &amp;softcard certificate.
        /// </summary>
        internal static string CredentialTypeDialog_CertCheckBoxString {
            get {
                return ResourceManager.GetString("CredentialTypeDialog_CertCheckBoxString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose an authentication method.
        /// </summary>
        internal static string CredentialTypeDialog_LabelString {
            get {
                return ResourceManager.GetString("CredentialTypeDialog_LabelString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string CredentialTypeDialog_OkButtonString {
            get {
                return ResourceManager.GetString("CredentialTypeDialog_OkButtonString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a &amp;username/password.
        /// </summary>
        internal static string CredentialTypeDialog_PwdCheckBoxString {
            get {
                return ResourceManager.GetString("CredentialTypeDialog_PwdCheckBoxString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to suspend updates from the server.  Operation aborted..
        /// </summary>
        internal static string FailedFreeze {
            get {
                return ResourceManager.GetString("FailedFreeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current operation doesn&apos;t support both Forced and Graceful manner..
        /// </summary>
        internal static string ForcedGracefulConflict {
            get {
                return ResourceManager.GetString("ForcedGracefulConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Allocation increased to {2} cores on {1}.
        /// </summary>
        internal static string FormatAllocationIncreased {
            get {
                return ResourceManager.GetString("FormatAllocationIncreased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Allocation reduced to {2} cores on {1}.
        /// </summary>
        internal static string FormatAllocationReduced {
            get {
                return ResourceManager.GetString("FormatAllocationReduced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job cancel operation failed. The Job is in state {0} after the operation..
        /// </summary>
        internal static string FormatJobCancelFailed {
            get {
                return ResourceManager.GetString("FormatJobCancelFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Created by {1}.
        /// </summary>
        internal static string FormatJobCreated {
            get {
                return ResourceManager.GetString("FormatJobCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Ended on {1}.
        /// </summary>
        internal static string FormatJobEndedOnNode {
            get {
                return ResourceManager.GetString("FormatJobEndedOnNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Job Canceled.
        /// </summary>
        internal static string FormatJobEventCanceled {
            get {
                return ResourceManager.GetString("FormatJobEventCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Cancel requested with force by {1}.
        /// </summary>
        internal static string FormatJobEventCancelRequestForceReceived {
            get {
                return ResourceManager.GetString("FormatJobEventCancelRequestForceReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Job is being Preempted.
        /// </summary>
        internal static string FormatJobEventCancelRequestPreemptionReceived {
            get {
                return ResourceManager.GetString("FormatJobEventCancelRequestPreemptionReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Cancel requested by {1}.
        /// </summary>
        internal static string FormatJobEventCancelRequestReceived {
            get {
                return ResourceManager.GetString("FormatJobEventCancelRequestReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Job Failed.
        /// </summary>
        internal static string FormatJobEventFailed {
            get {
                return ResourceManager.GetString("FormatJobEventFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Job Finished.
        /// </summary>
        internal static string FormatJobEventFinished {
            get {
                return ResourceManager.GetString("FormatJobEventFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Finish requested by {1}.
        /// </summary>
        internal static string FormatJobEventFinishRequestReceived {
            get {
                return ResourceManager.GetString("FormatJobEventFinishRequestReceived", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0}  Modified by {1}: {2}.
        /// </summary>
        internal static string FormatJobEventPropChange {
            get {
                return ResourceManager.GetString("FormatJobEventPropChange", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The job finish operation failed. The Job is in state {0} after the operation..
        /// </summary>
        internal static string FormatJobFinishFailed {
            get {
                return ResourceManager.GetString("FormatJobFinishFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Started.
        /// </summary>
        internal static string FormatJobStarted {
            get {
                return ResourceManager.GetString("FormatJobStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Started on {1} with {2} cores.
        /// </summary>
        internal static string FormatJobStartedOnNode {
            get {
                return ResourceManager.GetString("FormatJobStartedOnNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}  Submitted.
        /// </summary>
        internal static string FormatJobSubmitted {
            get {
                return ResourceManager.GetString("FormatJobSubmitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following nodes have been excluded from the job: {0}.
        /// </summary>
        internal static string GenericJobMessage_JobWarning_NodesExcluded {
            get {
                return ResourceManager.GetString("GenericJobMessage_JobWarning_NodesExcluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown message.
        /// </summary>
        internal static string GenericJobMessage_Unknown {
            get {
                return ResourceManager.GetString("GenericJobMessage_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} value is not in the valid value set.
        /// </summary>
        internal static string InvalidJobPropertyValue {
            get {
                return ResourceManager.GetString("InvalidJobPropertyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value in {0} is not in the valid value set.
        /// </summary>
        internal static string InvalidJobPropertyValueList {
            get {
                return ResourceManager.GetString("InvalidJobPropertyValueList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user name is not valid..
        /// </summary>
        internal static string InvalidUserName {
            get {
                return ResourceManager.GetString("InvalidUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DLL filters that must be called when any job submitted with this Job Template is about to run.  The DLL files are relative to the %CCP_DATA%\Filters folder. The filters are called in the order listed, and will run before the cluster-wide activation filter (if specified)..
        /// </summary>
        internal static string Job_ActivationFilters_Description {
            get {
                return ResourceManager.GetString("Job_ActivationFilters_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation Filters.
        /// </summary>
        internal static string Job_ActivationFilters_DisplayName {
            get {
                return ResourceManager.GetString("Job_ActivationFilters_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allocated Nodes.
        /// </summary>
        internal static string Job_AllocatedNodes_DisplayName {
            get {
                return ResourceManager.GetString("Job_AllocatedNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the scheduler will automatically calculate the maximum based on the tasks in the job..
        /// </summary>
        internal static string Job_AutoCalculateMax_Description {
            get {
                return ResourceManager.GetString("Job_AutoCalculateMax_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Calculate Maximum.
        /// </summary>
        internal static string Job_AutoCalculateMax_DisplayName {
            get {
                return ResourceManager.GetString("Job_AutoCalculateMax_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the scheduler will automatically calculate the minimum based on the tasks in the job..
        /// </summary>
        internal static string Job_AutoCalculateMin_Description {
            get {
                return ResourceManager.GetString("Job_AutoCalculateMin_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Calculate Minimum.
        /// </summary>
        internal static string Job_AutoCalculateMin_DisplayName {
            get {
                return ResourceManager.GetString("Job_AutoCalculateMin_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request Duration.
        /// </summary>
        internal static string Job_CallDuration_DisplayName {
            get {
                return ResourceManager.GetString("Job_CallDuration_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requests Calculated Per Second.
        /// </summary>
        internal static string Job_CallsPerSecond_DisplayName {
            get {
                return ResourceManager.GetString("Job_CallsPerSecond_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canceled Tasks.
        /// </summary>
        internal static string Job_CanceledTaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_CanceledTaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True this job can be grown by the scheduler when it is running..
        /// </summary>
        internal static string Job_CanGrow_Description {
            get {
                return ResourceManager.GetString("Job_CanGrow_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True this job can be shrunk by the scheduler when it is running..
        /// </summary>
        internal static string Job_CanShrink_Description {
            get {
                return ResourceManager.GetString("Job_CanShrink_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the job was last changed on the server..
        /// </summary>
        internal static string Job_ChangeTime_Description {
            get {
                return ResourceManager.GetString("Job_ChangeTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Time.
        /// </summary>
        internal static string Job_ChangeTime_DisplayName {
            get {
                return ResourceManager.GetString("Job_ChangeTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the application that created the job..
        /// </summary>
        internal static string Job_ClientSource_Description {
            get {
                return ResourceManager.GetString("Job_ClientSource_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring Tasks.
        /// </summary>
        internal static string Job_ConfiguringTaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_ConfiguringTaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the job was created..
        /// </summary>
        internal static string Job_CreateTime_Description {
            get {
                return ResourceManager.GetString("Job_CreateTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Time.
        /// </summary>
        internal static string Job_CreateTime_DisplayName {
            get {
                return ResourceManager.GetString("Job_CreateTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Job_CurrentCoreCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_CurrentCoreCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Job_CurrentNodeCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_CurrentNodeCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Job_CurrentSocketCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_CurrentSocketCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string Job_EmptyCancelReason {
            get {
                return ResourceManager.GetString("Job_EmptyCancelReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the job stopped..
        /// </summary>
        internal static string Job_EndTime_Description {
            get {
                return ResourceManager.GetString("Job_EndTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Time.
        /// </summary>
        internal static string Job_EndTime_DisplayName {
            get {
                return ResourceManager.GetString("Job_EndTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any error message that occured when the job was running..
        /// </summary>
        internal static string Job_ErrorMessage_Description {
            get {
                return ResourceManager.GetString("Job_ErrorMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Message.
        /// </summary>
        internal static string Job_ErrorMessage_DisplayName {
            get {
                return ResourceManager.GetString("Job_ErrorMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of memory that each process in this job is estimated to consume..
        /// </summary>
        internal static string Job_EstimatedProcessMemory_Description {
            get {
                return ResourceManager.GetString("Job_EstimatedProcessMemory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estimated Process Memory.
        /// </summary>
        internal static string Job_EstimatedProcessMemory_DisplayName {
            get {
                return ResourceManager.GetString("Job_EstimatedProcessMemory_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job&apos;s priority..
        /// </summary>
        internal static string Job_ExpandedPriority_Description {
            get {
                return ResourceManager.GetString("Job_ExpandedPriority_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanded Priority.
        /// </summary>
        internal static string Job_ExpandedPriority_DisplayName {
            get {
                return ResourceManager.GetString("Job_ExpandedPriority_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Tasks.
        /// </summary>
        internal static string Job_FailedTaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_FailedTaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, then failure of any task in the job will cause the entire job to fail immediately..
        /// </summary>
        internal static string Job_FailOnTaskFailure_Description {
            get {
                return ResourceManager.GetString("Job_FailOnTaskFailure_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail on Task Failure.
        /// </summary>
        internal static string Job_FailOnTaskFailure_DisplayName {
            get {
                return ResourceManager.GetString("Job_FailOnTaskFailure_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished Tasks.
        /// </summary>
        internal static string Job_FinishedTaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_FinishedTaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True this job has a runtime..
        /// </summary>
        internal static string Job_HasRuntime_Description {
            get {
                return ResourceManager.GetString("Job_HasRuntime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The numeric ID of this job..
        /// </summary>
        internal static string Job_Id_Description {
            get {
                return ResourceManager.GetString("Job_Id_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job ID.
        /// </summary>
        internal static string Job_Id_DisplayName {
            get {
                return ResourceManager.GetString("Job_Id_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, no other jobs can be run on a compute node at the same time as this job..
        /// </summary>
        internal static string Job_IsExclusive_Description {
            get {
                return ResourceManager.GetString("Job_IsExclusive_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusive.
        /// </summary>
        internal static string Job_IsExclusive_DisplayName {
            get {
                return ResourceManager.GetString("Job_IsExclusive_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Job Template against which this job is being submitted..
        /// </summary>
        internal static string Job_JobTemplate_Description {
            get {
                return ResourceManager.GetString("Job_JobTemplate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template.
        /// </summary>
        internal static string Job_JobTemplate_DisplayName {
            get {
                return ResourceManager.GetString("Job_JobTemplate_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of processors on which this job can run..
        /// </summary>
        internal static string Job_MaxCores_Description {
            get {
                return ResourceManager.GetString("Job_MaxCores_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Cores.
        /// </summary>
        internal static string Job_MaxCores_DisplayName {
            get {
                return ResourceManager.GetString("Job_MaxCores_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of processors on any nodes that this job is run on..
        /// </summary>
        internal static string Job_MaxCoresPerNode_Description {
            get {
                return ResourceManager.GetString("Job_MaxCoresPerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Cores Per Node.
        /// </summary>
        internal static string Job_MaxCoresPerNode_DisplayName {
            get {
                return ResourceManager.GetString("Job_MaxCoresPerNode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum amount of memory (in MB) on any nodes that this job is run on..
        /// </summary>
        internal static string Job_MaxMemory_Description {
            get {
                return ResourceManager.GetString("Job_MaxMemory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Memory.
        /// </summary>
        internal static string Job_MaxMemory_DisplayName {
            get {
                return ResourceManager.GetString("Job_MaxMemory_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of nodes on which this job can run..
        /// </summary>
        internal static string Job_MaxNodes_Description {
            get {
                return ResourceManager.GetString("Job_MaxNodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Nodes.
        /// </summary>
        internal static string Job_MaxNodes_DisplayName {
            get {
                return ResourceManager.GetString("Job_MaxNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Processor Count.
        /// </summary>
        internal static string Job_MaxProcsPerNode_DisplayName {
            get {
                return ResourceManager.GetString("Job_MaxProcsPerNode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of sockets on which this job can run..
        /// </summary>
        internal static string Job_MaxSockets_Description {
            get {
                return ResourceManager.GetString("Job_MaxSockets_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Sockets.
        /// </summary>
        internal static string Job_MaxSockets_DisplayName {
            get {
                return ResourceManager.GetString("Job_MaxSockets_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of processors on which this job can run..
        /// </summary>
        internal static string Job_MinCores_Description {
            get {
                return ResourceManager.GetString("Job_MinCores_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Cores.
        /// </summary>
        internal static string Job_MinCores_DisplayName {
            get {
                return ResourceManager.GetString("Job_MinCores_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of processors that must be present on any nodes that this job is run on..
        /// </summary>
        internal static string Job_MinCoresPerNode_Description {
            get {
                return ResourceManager.GetString("Job_MinCoresPerNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Cores Per Node.
        /// </summary>
        internal static string Job_MinCoresPerNode_DisplayName {
            get {
                return ResourceManager.GetString("Job_MinCoresPerNode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum amount of memory (in MB) that must be present on any nodes that this job is run on..
        /// </summary>
        internal static string Job_MinMemory_Description {
            get {
                return ResourceManager.GetString("Job_MinMemory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Memory.
        /// </summary>
        internal static string Job_MinMemory_DisplayName {
            get {
                return ResourceManager.GetString("Job_MinMemory_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of nodes on which this job can run..
        /// </summary>
        internal static string Job_MinNodes_Description {
            get {
                return ResourceManager.GetString("Job_MinNodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Nodes.
        /// </summary>
        internal static string Job_MinNodes_DisplayName {
            get {
                return ResourceManager.GetString("Job_MinNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Processor Count.
        /// </summary>
        internal static string Job_MinProcsPerNode_DisplayName {
            get {
                return ResourceManager.GetString("Job_MinProcsPerNode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of sockets on which this job can run..
        /// </summary>
        internal static string Job_MinSockets_Description {
            get {
                return ResourceManager.GetString("Job_MinSockets_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Sockets.
        /// </summary>
        internal static string Job_MinSockets_DisplayName {
            get {
                return ResourceManager.GetString("Job_MinSockets_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of this job..
        /// </summary>
        internal static string Job_Name_Description {
            get {
                return ResourceManager.GetString("Job_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job Name.
        /// </summary>
        internal static string Job_Name_DisplayName {
            get {
                return ResourceManager.GetString("Job_Name_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How selected Node Groups will be combined. It&apos;s recommended that the Node Group property is also added to this template, which selects the node groups that will be available to combine. Intersection will run only on nodes that are members of all selected Node Groups. Uniform will only run on nodes that are members of any one of the selected  Node Groups. Union will only run on nodes that are members of any of the selected Node Groups..
        /// </summary>
        internal static string Job_NodeGroupOp_Description {
            get {
                return ResourceManager.GetString("Job_NodeGroupOp_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Groups Operator.
        /// </summary>
        internal static string Job_NodeGroupOp_DisplayName {
            get {
                return ResourceManager.GetString("Job_NodeGroupOp_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job can only be run on nodes that are in all of these groups..
        /// </summary>
        internal static string Job_NodeGroups_Description {
            get {
                return ResourceManager.GetString("Job_NodeGroups_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Groups.
        /// </summary>
        internal static string Job_NodeGroups_DisplayName {
            get {
                return ResourceManager.GetString("Job_NodeGroups_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node preparation task will be automatically created in the job, using the command line defined here..
        /// </summary>
        internal static string Job_NodePrepareTask_Description {
            get {
                return ResourceManager.GetString("Job_NodePrepareTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Preparation Task.
        /// </summary>
        internal static string Job_NodePrepareTask_DisplayName {
            get {
                return ResourceManager.GetString("Job_NodePrepareTask_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node release task will be automatically created in the job, using the command line defined here..
        /// </summary>
        internal static string Job_NodeReleaseTask_Description {
            get {
                return ResourceManager.GetString("Job_NodeReleaseTask_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Release Task.
        /// </summary>
        internal static string Job_NodeReleaseTask_DisplayName {
            get {
                return ResourceManager.GetString("Job_NodeReleaseTask_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Requests.
        /// </summary>
        internal static string Job_NumberOfCalls_DisplayName {
            get {
                return ResourceManager.GetString("Job_NumberOfCalls_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outstanding Requests.
        /// </summary>
        internal static string Job_NumberOfOutstandingCalls_DisplayName {
            get {
                return ResourceManager.GetString("Job_NumberOfOutstandingCalls_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ordering to use when selecting nodes for the job. For example, ordering by &quot;More Memory&quot; will allocate the available nodes with the largest amount of memory..
        /// </summary>
        internal static string Job_OrderBy_Description {
            get {
                return ResourceManager.GetString("Job_OrderBy_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Ordering.
        /// </summary>
        internal static string Job_OrderBy_DisplayName {
            get {
                return ResourceManager.GetString("Job_OrderBy_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user account that created the job..
        /// </summary>
        internal static string Job_Owner_Description {
            get {
                return ResourceManager.GetString("Job_Owner_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner.
        /// </summary>
        internal static string Job_Owner_DisplayName {
            get {
                return ResourceManager.GetString("Job_Owner_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pending Reason.
        /// </summary>
        internal static string Job_PendingReason_DisplayName {
            get {
                return ResourceManager.GetString("Job_PendingReason_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jobs that are submitted with this template will use the specified resource pool. All jobs that use this resource pool will collectively be guaranteed the proportion of cluster resources as defined by the pool weight..
        /// </summary>
        internal static string Job_Pool_Description {
            get {
                return ResourceManager.GetString("Job_Pool_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pool.
        /// </summary>
        internal static string Job_Pool_DisplayName {
            get {
                return ResourceManager.GetString("Job_Pool_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, this job can be preempted by a higher-priority job, and it can automatically grow resources based on the job resources configuration..
        /// </summary>
        internal static string Job_Preemptable_Description {
            get {
                return ResourceManager.GetString("Job_Preemptable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preemptable and Can Grow.
        /// </summary>
        internal static string Job_Preemptable_DisplayName {
            get {
                return ResourceManager.GetString("Job_Preemptable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The previous state of the job..
        /// </summary>
        internal static string Job_PreviousState_Description {
            get {
                return ResourceManager.GetString("Job_PreviousState_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The priority of the job..
        /// </summary>
        internal static string Job_Priority_Description {
            get {
                return ResourceManager.GetString("Job_Priority_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Priority.
        /// </summary>
        internal static string Job_Priority_DisplayName {
            get {
                return ResourceManager.GetString("Job_Priority_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress.
        /// </summary>
        internal static string Job_Progress_DisplayName {
            get {
                return ResourceManager.GetString("Job_Progress_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress Message.
        /// </summary>
        internal static string Job_ProgressMessage_DisplayName {
            get {
                return ResourceManager.GetString("Job_ProgressMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the project of which this job is a part..
        /// </summary>
        internal static string Job_Project_Description {
            get {
                return ResourceManager.GetString("Job_Project_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project.
        /// </summary>
        internal static string Job_Project_DisplayName {
            get {
                return ResourceManager.GetString("Job_Project_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queued Tasks.
        /// </summary>
        internal static string Job_QueuedTaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_QueuedTaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job can only be run on nodes that are in this list..
        /// </summary>
        internal static string Job_RequestedNodes_Description {
            get {
                return ResourceManager.GetString("Job_RequestedNodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested Nodes.
        /// </summary>
        internal static string Job_RequestedNodes_DisplayName {
            get {
                return ResourceManager.GetString("Job_RequestedNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of times the job has been requeued..
        /// </summary>
        internal static string Job_RequeueCount_Description {
            get {
                return ResourceManager.GetString("Job_RequeueCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Nodes.
        /// </summary>
        internal static string Job_RequiredNodes_DisplayName {
            get {
                return ResourceManager.GetString("Job_RequiredNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running Tasks.
        /// </summary>
        internal static string Job_RunningTaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_RunningTaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hard limit on the amount of time this job will be allowed to run. (dd:hh:mm).
        /// </summary>
        internal static string Job_RuntimeSeconds_Description {
            get {
                return ResourceManager.GetString("Job_RuntimeSeconds_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run Time.
        /// </summary>
        internal static string Job_RuntimeSeconds_DisplayName {
            get {
                return ResourceManager.GetString("Job_RuntimeSeconds_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, this job will run until it is cancelled or its runtime is expired. It will not stop when there are no tasks left within it..
        /// </summary>
        internal static string Job_RunUntilCanceled_Description {
            get {
                return ResourceManager.GetString("Job_RunUntilCanceled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run Until Canceled.
        /// </summary>
        internal static string Job_RunUntilCanceled_DisplayName {
            get {
                return ResourceManager.GetString("Job_RunUntilCanceled_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the service..
        /// </summary>
        internal static string Job_ServiceName_Description {
            get {
                return ResourceManager.GetString("Job_ServiceName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Name.
        /// </summary>
        internal static string Job_ServiceName_DisplayName {
            get {
                return ResourceManager.GetString("Job_ServiceName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, this job can only run on one node..
        /// </summary>
        internal static string Job_SingleNode_Description {
            get {
                return ResourceManager.GetString("Job_SingleNode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single Node.
        /// </summary>
        internal static string Job_SingleNode_DisplayName {
            get {
                return ResourceManager.GetString("Job_SingleNode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of licenses that are required for the job..
        /// </summary>
        internal static string Job_SoftwareLicense_Description {
            get {
                return ResourceManager.GetString("Job_SoftwareLicense_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        internal static string Job_SoftwareLicense_DisplayName {
            get {
                return ResourceManager.GetString("Job_SoftwareLicense_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the job started..
        /// </summary>
        internal static string Job_StartTime_Description {
            get {
                return ResourceManager.GetString("Job_StartTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Time.
        /// </summary>
        internal static string Job_StartTime_DisplayName {
            get {
                return ResourceManager.GetString("Job_StartTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current state of the job..
        /// </summary>
        internal static string Job_State_Description {
            get {
                return ResourceManager.GetString("Job_State_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State.
        /// </summary>
        internal static string Job_State_DisplayName {
            get {
                return ResourceManager.GetString("Job_State_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DLL filters that must be called when any job is submitted with this Job Template.  The DLL files are relative to the %CCP_DATA%\Filters folder. The filters are called in the order listed, and will run before the cluster-wide submission filter (if specified)..
        /// </summary>
        internal static string Job_SubmissionFilters_Description {
            get {
                return ResourceManager.GetString("Job_SubmissionFilters_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submission Filters.
        /// </summary>
        internal static string Job_SubmissionFilters_DisplayName {
            get {
                return ResourceManager.GetString("Job_SubmissionFilters_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the job was submitted..
        /// </summary>
        internal static string Job_SubmitTime_Description {
            get {
                return ResourceManager.GetString("Job_SubmitTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit Time.
        /// </summary>
        internal static string Job_SubmitTime_DisplayName {
            get {
                return ResourceManager.GetString("Job_SubmitTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Tasks.
        /// </summary>
        internal static string Job_TaskCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_TaskCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum retry count of task execution failure..
        /// </summary>
        internal static string Job_TaskExecutionFailureRetryLimit_Description {
            get {
                return ResourceManager.GetString("Job_TaskExecutionFailureRetryLimit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Execution Failure Retry Limit.
        /// </summary>
        internal static string Job_TaskExecutionFailureRetryLimit_DisplayName {
            get {
                return ResourceManager.GetString("Job_TaskExecutionFailureRetryLimit_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Job_TotalNodeCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_TotalNodeCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Job_TotalResourceCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_TotalResourceCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Job_TotalSocketCount_DisplayName {
            get {
                return ResourceManager.GetString("Job_TotalSocketCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The granularity at which to schedule resources for the job.  The Minimum and Maximum specify the number of these resources which are required for the job..
        /// </summary>
        internal static string Job_UnitType_Description {
            get {
                return ResourceManager.GetString("Job_UnitType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit Type.
        /// </summary>
        internal static string Job_UnitType_DisplayName {
            get {
                return ResourceManager.GetString("Job_UnitType_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account that will be used to run the job..
        /// </summary>
        internal static string Job_UserName_Description {
            get {
                return ResourceManager.GetString("Job_UserName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run As User.
        /// </summary>
        internal static string Job_UserName_DisplayName {
            get {
                return ResourceManager.GetString("Job_UserName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait Time.
        /// </summary>
        internal static string Job_WaitTime_DisplayName {
            get {
                return ResourceManager.GetString("Job_WaitTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job {0} can not be finished in State {1}.
        /// </summary>
        internal static string JobCannotBeFinished {
            get {
                return ResourceManager.GetString("JobCannotBeFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open standard error file..
        /// </summary>
        internal static string JobErrorMessage_Execution_FailedToOpenStandardError {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_FailedToOpenStandardError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open standard input file..
        /// </summary>
        internal static string JobErrorMessage_Execution_FailedToOpenStandardInput {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_FailedToOpenStandardInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open standard output file..
        /// </summary>
        internal static string JobErrorMessage_Execution_FailedToOpenStandardOutput {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_FailedToOpenStandardOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred on the node: please see the task for more details..
        /// </summary>
        internal static string JobErrorMessage_Execution_NodeError {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_NodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_NodePrepTaskFailure {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_NodePrepTaskFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node became unreachable..
        /// </summary>
        internal static string JobErrorMessage_Execution_NodeUnreachable {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_NodeUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_ProcessDead {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_ProcessDead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_ResourceFailure {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_ResourceFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskCanceledBeforeAssignment {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskCanceledBeforeAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task canceled during execution..
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskCanceledDuringExecution {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskCanceledDuringExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskCanceledOnJobRequeue {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskCanceledOnJobRequeue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task failed during execution..
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskExecutionFailure {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskExecutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more tasks have failed..
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskFailure {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskNodeNotUsable {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskNodeNotUsable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_TaskRuntimeExpired {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TaskRuntimeExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_TasksJobCanceled {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TasksJobCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_TasksPreempted {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_TasksPreempted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobErrorMessage_Execution_UnknownError {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access working directory..
        /// </summary>
        internal static string JobErrorMessage_Execution_WorkingDirectoryNotFound {
            get {
                return ResourceManager.GetString("JobErrorMessage_Execution_WorkingDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobMessageHeader_JobCancelation_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobCancelation_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job has been canceled: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_JobCancelation_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobCancelation_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobMessageHeader_JobFailure_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobFailure_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job has encountered an error: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_JobFailure_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobFailure_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobMessageHeader_JobPendingReason_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobPendingReason_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job is pending: {0}.
        /// </summary>
        internal static string JobMessageHeader_JobPendingReason_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobPendingReason_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string JobMessageHeader_JobWarning_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobWarning_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: {0}.
        /// </summary>
        internal static string JobMessageHeader_JobWarning_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_JobWarning_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} tasks canceled with message: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_TaskCancelation_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskCancelation_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 task canceled with message: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_TaskCancelation_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskCancelation_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} tasks failed with exit code {0}.
        /// </summary>
        internal static string JobMessageHeader_TaskExecutionError_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskExecutionError_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 task failed with exit code {0}.
        /// </summary>
        internal static string JobMessageHeader_TaskExecutionError_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskExecutionError_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} tasks failed with message: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_TaskFailure_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskFailure_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 task failed with message: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_TaskFailure_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskFailure_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {2} tasks failed on node {1} with message: &quot;{0}&quot; .
        /// </summary>
        internal static string JobMessageHeader_TaskNodeError_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskNodeError_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 task failed on node {1} with message: &quot;{0}&quot;.
        /// </summary>
        internal static string JobMessageHeader_TaskNodeError_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskNodeError_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} tasks failed to pass validation..
        /// </summary>
        internal static string JobMessageHeader_TaskValidationError_Plural {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskValidationError_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 task failed to pass validation..
        /// </summary>
        internal static string JobMessageHeader_TaskValidationError_Singular {
            get {
                return ResourceManager.GetString("JobMessageHeader_TaskValidationError_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Time.
        /// </summary>
        internal static string JobTemplate_ChangeTime_DisplayName {
            get {
                return ResourceManager.GetString("JobTemplate_ChangeTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string JobTemplate_Description_DisplayName {
            get {
                return ResourceManager.GetString("JobTemplate_Description_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string JobTemplate_Name_DisplayName {
            get {
                return ResourceManager.GetString("JobTemplate_Name_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} value is greater than {1} that is specified in the profile.
        /// </summary>
        internal static string LargeJobPropertyValue {
            get {
                return ResourceManager.GetString("LargeJobPropertyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} method or operation is not implemented..
        /// </summary>
        internal static string MethodNotImplemented {
            get {
                return ResourceManager.GetString("MethodNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The values in {0} do not contain a value in the required value set.
        /// </summary>
        internal static string MissingRequiredJobPropertyValue {
            get {
                return ResourceManager.GetString("MissingRequiredJobPropertyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must provide a XmlWriter.
        /// </summary>
        internal static string MustProvideXmlWriter {
            get {
                return ResourceManager.GetString("MustProvideXmlWriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The speed of the CPU&apos;s installed in the node..
        /// </summary>
        internal static string Node_CpuSpeed_Description {
            get {
                return ResourceManager.GetString("Node_CpuSpeed_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unique identifier used by the the Cluster to identify this node..
        /// </summary>
        internal static string Node_Guid_Description {
            get {
                return ResourceManager.GetString("Node_Guid_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The numeric system ID of this node within the Scheduler..
        /// </summary>
        internal static string Node_Id_Description {
            get {
                return ResourceManager.GetString("Node_Id_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A set of flags that indicates which types (Batch, Service) can run on the node..
        /// </summary>
        internal static string Node_JobType_Description {
            get {
                return ResourceManager.GetString("Node_JobType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last UTC time that the node contacted the Scheduler..
        /// </summary>
        internal static string Node_LastPingTime_Description {
            get {
                return ResourceManager.GetString("Node_LastPingTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of RAM installed in the node..
        /// </summary>
        internal static string Node_MemorySize_Description {
            get {
                return ResourceManager.GetString("Node_MemorySize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, indicates that the node will be taken offline..
        /// </summary>
        internal static string Node_MoveToOffline_Description {
            get {
                return ResourceManager.GetString("Node_MoveToOffline_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NETBIOS name of the node..
        /// </summary>
        internal static string Node_Name_Description {
            get {
                return ResourceManager.GetString("Node_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node groups that this node belongs to..
        /// </summary>
        internal static string Node_NodeGroups_Description {
            get {
                return ResourceManager.GetString("Node_NodeGroups_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of cores installed on the node..
        /// </summary>
        internal static string Node_NumCores_Description {
            get {
                return ResourceManager.GetString("Node_NumCores_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of processor sockets with processors installed on the node..
        /// </summary>
        internal static string Node_NumSockets_Description {
            get {
                return ResourceManager.GetString("Node_NumSockets_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last UTC time that the node was taken offline..
        /// </summary>
        internal static string Node_OfflineTime_Description {
            get {
                return ResourceManager.GetString("Node_OfflineTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last UTC time that the node was taken online..
        /// </summary>
        internal static string Node_OnlineTime_Description {
            get {
                return ResourceManager.GetString("Node_OnlineTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, the Scheduler is connected to the node..
        /// </summary>
        internal static string Node_Reachable_Description {
            get {
                return ResourceManager.GetString("Node_Reachable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current state of the node..
        /// </summary>
        internal static string Node_State_Description {
            get {
                return ResourceManager.GetString("Node_State_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Pool_CurrentAllocation_DisplayName {
            get {
                return ResourceManager.GetString("Pool_CurrentAllocation_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guarantee.
        /// </summary>
        internal static string Pool_Guarantee_DisplayName {
            get {
                return ResourceManager.GetString("Pool_Guarantee_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string Pool_Name_DisplayName {
            get {
                return ResourceManager.GetString("Pool_Name_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weight.
        /// </summary>
        internal static string Pool_Weight_DisplayName {
            get {
                return ResourceManager.GetString("Pool_Weight_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port is out of range.
        /// </summary>
        internal static string PortOutOfRange {
            get {
                return ResourceManager.GetString("PortOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property value cannot be null.
        /// </summary>
        internal static string PropertyCantBeNull {
            get {
                return ResourceManager.GetString("PropertyCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given property name is null.
        /// </summary>
        internal static string PropNameNull {
            get {
                return ResourceManager.GetString("PropNameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote command canceled by user..
        /// </summary>
        internal static string RemoteCommand_Canceled {
            get {
                return ResourceManager.GetString("RemoteCommand_Canceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Admin job cannot be opened as a remote command..
        /// </summary>
        internal static string RemoteCommand_InvalidJobType {
            get {
                return ResourceManager.GetString("RemoteCommand_InvalidJobType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory cannot be null or empty..
        /// </summary>
        internal static string RemoteCommand_InvalidOutputDirectory {
            get {
                return ResourceManager.GetString("RemoteCommand_InvalidOutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid remote command output option..
        /// </summary>
        internal static string RemoteCommand_InvalidOutputOption {
            get {
                return ResourceManager.GetString("RemoteCommand_InvalidOutputOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote command.
        /// </summary>
        internal static string RemoteCommand_JobName {
            get {
                return ResourceManager.GetString("RemoteCommand_JobName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job does not have AskedNodes set..
        /// </summary>
        internal static string RemoteCommand_NoAskedNodes {
            get {
                return ResourceManager.GetString("RemoteCommand_NoAskedNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An existing command cannot be opened with immediate output mode..
        /// </summary>
        internal static string RemoteCommand_NoImmediateOutputForOpenCommand {
            get {
                return ResourceManager.GetString("RemoteCommand_NoImmediateOutputForOpenCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open output stream because output is on compute node&apos;s local disk {0}..
        /// </summary>
        internal static string RemoteCommand_NoLocalPath {
            get {
                return ResourceManager.GetString("RemoteCommand_NoLocalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only RemoteCommand with SpoolDir and UserDir output option has output stream..
        /// </summary>
        internal static string RemoteCommand_NoStreamForOutput {
            get {
                return ResourceManager.GetString("RemoteCommand_NoStreamForOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote command.
        /// </summary>
        internal static string RemoteCommand_TaskName {
            get {
                return ResourceManager.GetString("RemoteCommand_TaskName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node is not in know node list for the remote command..
        /// </summary>
        internal static string RemoteCommand_UnknownNode {
            get {
                return ResourceManager.GetString("RemoteCommand_UnknownNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote command cannot be started at {0} state..
        /// </summary>
        internal static string RemoteCommand_WrongStateToStart {
            get {
                return ResourceManager.GetString("RemoteCommand_WrongStateToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returning Action={0}..
        /// </summary>
        internal static string ReturningActionTemplate {
            get {
                return ResourceManager.GetString("ReturningActionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RunUntilCanceled property requires a Boolean value.
        /// </summary>
        internal static string RunUntilCanceledNotBool {
            get {
                return ResourceManager.GetString("RunUntilCanceledNotBool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RunUntilCanceled property must be set to true.
        /// </summary>
        internal static string RunUntilCanceledNotTrue {
            get {
                return ResourceManager.GetString("RunUntilCanceledNotTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema can not be null or empty.
        /// </summary>
        internal static string SchemaCantBeNull {
            get {
                return ResourceManager.GetString("SchemaCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required schema is not valid  .
        /// </summary>
        internal static string SchemaNotValid {
            get {
                return ResourceManager.GetString("SchemaNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending a request  .
        /// </summary>
        internal static string SendingARequest {
            get {
                return ResourceManager.GetString("SendingARequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service job can never go to Running state  .
        /// </summary>
        internal static string ServiceJobTerminated {
            get {
                return ResourceManager.GetString("ServiceJobTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service name can not be null or empty, and can only contain &quot;0-9&quot;, &quot;a-z&quot;, &quot;A-Z&quot;, &quot;.&quot; and &quot;_&quot;..
        /// </summary>
        internal static string ServiceNameCantBeNull {
            get {
                return ResourceManager.GetString("ServiceNameCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} value is less than {1} that is specified in the profile.
        /// </summary>
        internal static string SmallJobPropertyValue {
            get {
                return ResourceManager.GetString("SmallJobPropertyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The store object can not be null  .
        /// </summary>
        internal static string StoreCantBeNull {
            get {
                return ResourceManager.GetString("StoreCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string argument can not contain &quot;,&quot;.
        /// </summary>
        internal static string StringCantContainComma {
            get {
                return ResourceManager.GetString("StringCantContainComma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allocated Nodes.
        /// </summary>
        internal static string Task_AllocatedNodes_DisplayName {
            get {
                return ResourceManager.GetString("Task_AllocatedNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the task was last changed on the server..
        /// </summary>
        internal static string Task_ChangeTime_Description {
            get {
                return ResourceManager.GetString("Task_ChangeTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command line that will be executed by this task..
        /// </summary>
        internal static string Task_CommandLine_Description {
            get {
                return ResourceManager.GetString("Task_CommandLine_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command Line.
        /// </summary>
        internal static string Task_CommandLine_DisplayName {
            get {
                return ResourceManager.GetString("Task_CommandLine_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the task was created..
        /// </summary>
        internal static string Task_CreateTime_Description {
            get {
                return ResourceManager.GetString("Task_CreateTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Task_CurrentCoreCount_DisplayName {
            get {
                return ResourceManager.GetString("Task_CurrentCoreCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Task_CurrentNodeCount_DisplayName {
            get {
                return ResourceManager.GetString("Task_CurrentNodeCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Task_CurrentSocketCount_DisplayName {
            get {
                return ResourceManager.GetString("Task_CurrentSocketCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of a task within the owning job that this task must wait to complete before it can start..
        /// </summary>
        internal static string Task_DependsOn_Description {
            get {
                return ResourceManager.GetString("Task_DependsOn_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the task stopped..
        /// </summary>
        internal static string Task_EndTime_Description {
            get {
                return ResourceManager.GetString("Task_EndTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Time.
        /// </summary>
        internal static string Task_EndTime_DisplayName {
            get {
                return ResourceManager.GetString("Task_EndTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ending index for the sweep..
        /// </summary>
        internal static string Task_EndValue_Description {
            get {
                return ResourceManager.GetString("Task_EndValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sweep End Index.
        /// </summary>
        internal static string Task_EndValue_DisplayName {
            get {
                return ResourceManager.GetString("Task_EndValue_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment Variables.
        /// </summary>
        internal static string Task_EnvironmentVariables_DisplayName {
            get {
                return ResourceManager.GetString("Task_EnvironmentVariables_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any error message that occured when the task was running..
        /// </summary>
        internal static string Task_ErrorMessage_Description {
            get {
                return ResourceManager.GetString("Task_ErrorMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Message.
        /// </summary>
        internal static string Task_ErrorMessage_DisplayName {
            get {
                return ResourceManager.GetString("Task_ErrorMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exit code for the process that this task ran..
        /// </summary>
        internal static string Task_ExitCode_Description {
            get {
                return ResourceManager.GetString("Task_ExitCode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Code.
        /// </summary>
        internal static string Task_ExitCode_DisplayName {
            get {
                return ResourceManager.GetString("Task_ExitCode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True this task has a runtime..
        /// </summary>
        internal static string Task_HasRuntime_Description {
            get {
                return ResourceManager.GetString("Task_HasRuntime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The numeric ID of this task..
        /// </summary>
        internal static string Task_Id_Description {
            get {
                return ResourceManager.GetString("Task_Id_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task ID.
        /// </summary>
        internal static string Task_Id_DisplayName {
            get {
                return ResourceManager.GetString("Task_Id_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount to increment the sweep index at each step of the sweep..
        /// </summary>
        internal static string Task_IncrementValue_Description {
            get {
                return ResourceManager.GetString("Task_IncrementValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sweep Increment.
        /// </summary>
        internal static string Task_IncrementValue_DisplayName {
            get {
                return ResourceManager.GetString("Task_IncrementValue_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, no other tasks can be run on a compute node at the same time as this task..
        /// </summary>
        internal static string Task_IsExclusive_Description {
            get {
                return ResourceManager.GetString("Task_IsExclusive_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusive.
        /// </summary>
        internal static string Task_IsExclusive_DisplayName {
            get {
                return ResourceManager.GetString("Task_IsExclusive_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If True, this task is parametric. This property is deprecated: please use the Type property instead..
        /// </summary>
        internal static string Task_IsParametric_Description {
            get {
                return ResourceManager.GetString("Task_IsParametric_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parametric.
        /// </summary>
        internal static string Task_IsParametric_DisplayName {
            get {
                return ResourceManager.GetString("Task_IsParametric_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the task runs and fails, setting Rerunnable to True means the scheduler will attempt to rerun the task. If Rerunnable is False, the task will fail after the first run attempt fails..
        /// </summary>
        internal static string Task_IsRerunnable_Description {
            get {
                return ResourceManager.GetString("Task_IsRerunnable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rerunnable.
        /// </summary>
        internal static string Task_IsRerunnable_DisplayName {
            get {
                return ResourceManager.GetString("Task_IsRerunnable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of processors on which this task can run..
        /// </summary>
        internal static string Task_MaxCores_Description {
            get {
                return ResourceManager.GetString("Task_MaxCores_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of nodes on which this task can run..
        /// </summary>
        internal static string Task_MaxNodes_Description {
            get {
                return ResourceManager.GetString("Task_MaxNodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of sockets on which this task can run..
        /// </summary>
        internal static string Task_MaxSockets_Description {
            get {
                return ResourceManager.GetString("Task_MaxSockets_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of processors on which this task can run..
        /// </summary>
        internal static string Task_MinCores_Description {
            get {
                return ResourceManager.GetString("Task_MinCores_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of nodes on which this task can run..
        /// </summary>
        internal static string Task_MinNodes_Description {
            get {
                return ResourceManager.GetString("Task_MinNodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of sockets on which this task can run..
        /// </summary>
        internal static string Task_MinSockets_Description {
            get {
                return ResourceManager.GetString("Task_MinSockets_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of this task..
        /// </summary>
        internal static string Task_Name_Description {
            get {
                return ResourceManager.GetString("Task_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Name.
        /// </summary>
        internal static string Task_Name_DisplayName {
            get {
                return ResourceManager.GetString("Task_Name_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output from the task..
        /// </summary>
        internal static string Task_Output_Description {
            get {
                return ResourceManager.GetString("Task_Output_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        internal static string Task_Output_DisplayName {
            get {
                return ResourceManager.GetString("Task_Output_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The numeric ID of the job that this task belongs to..
        /// </summary>
        internal static string Task_ParentJobId_Description {
            get {
                return ResourceManager.GetString("Task_ParentJobId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pending Reason.
        /// </summary>
        internal static string Task_PendingReason_DisplayName {
            get {
                return ResourceManager.GetString("Task_PendingReason_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The previous state of the task..
        /// </summary>
        internal static string Task_PreviousState_Description {
            get {
                return ResourceManager.GetString("Task_PreviousState_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of times the task has been requeued..
        /// </summary>
        internal static string Task_RequeueCount_Description {
            get {
                return ResourceManager.GetString("Task_RequeueCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists the nodes that must be assigned to this task and its job in order to run..
        /// </summary>
        internal static string Task_RequiredNodes_Description {
            get {
                return ResourceManager.GetString("Task_RequiredNodes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Nodes.
        /// </summary>
        internal static string Task_RequiredNodes_DisplayName {
            get {
                return ResourceManager.GetString("Task_RequiredNodes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hard limit on the amount of time this task will be allowed to run..
        /// </summary>
        internal static string Task_RuntimeSeconds_Description {
            get {
                return ResourceManager.GetString("Task_RuntimeSeconds_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run Time.
        /// </summary>
        internal static string Task_RuntimeSeconds_DisplayName {
            get {
                return ResourceManager.GetString("Task_RuntimeSeconds_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the task started..
        /// </summary>
        internal static string Task_StartTime_Description {
            get {
                return ResourceManager.GetString("Task_StartTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Time.
        /// </summary>
        internal static string Task_StartTime_DisplayName {
            get {
                return ResourceManager.GetString("Task_StartTime_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The starting index for the sweep..
        /// </summary>
        internal static string Task_StartValue_Description {
            get {
                return ResourceManager.GetString("Task_StartValue_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sweep Start Index.
        /// </summary>
        internal static string Task_StartValue_DisplayName {
            get {
                return ResourceManager.GetString("Task_StartValue_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current state of the task..
        /// </summary>
        internal static string Task_State_Description {
            get {
                return ResourceManager.GetString("Task_State_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State.
        /// </summary>
        internal static string Task_State_DisplayName {
            get {
                return ResourceManager.GetString("Task_State_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path (relative to the working directory) to the file to which the stderr of this task should be written..
        /// </summary>
        internal static string Task_StdErrFilePath_Description {
            get {
                return ResourceManager.GetString("Task_StdErrFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Error.
        /// </summary>
        internal static string Task_StdErrFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Task_StdErrFilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path (relative to the working directory) to the file from which the stdin of this task should be read..
        /// </summary>
        internal static string Task_StdInFilePath_Description {
            get {
                return ResourceManager.GetString("Task_StdInFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Input.
        /// </summary>
        internal static string Task_StdInFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Task_StdInFilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path (relative to the working directory) to the file to which the stdout of this task should be written..
        /// </summary>
        internal static string Task_StdOutFilePath_Description {
            get {
                return ResourceManager.GetString("Task_StdOutFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard Output.
        /// </summary>
        internal static string Task_StdOutFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Task_StdOutFilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UTC time the task was submitted..
        /// </summary>
        internal static string Task_SubmitTime_Description {
            get {
                return ResourceManager.GetString("Task_SubmitTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID for this task..
        /// </summary>
        internal static string Task_TaskId_Description {
            get {
                return ResourceManager.GetString("Task_TaskId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Task_TotalNodeCount_DisplayName {
            get {
                return ResourceManager.GetString("Task_TotalNodeCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Task_TotalResourceCount_DisplayName {
            get {
                return ResourceManager.GetString("Task_TotalResourceCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Allocation.
        /// </summary>
        internal static string Task_TotalSocketCount_DisplayName {
            get {
                return ResourceManager.GetString("Task_TotalSocketCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task type. The type determine whether a task has any sub-tasks, and when it will run during the course of a job. See the TaskType enumeration for more details..
        /// </summary>
        internal static string Task_Type_Description {
            get {
                return ResourceManager.GetString("Task_Type_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string Task_Type_DisplayName {
            get {
                return ResourceManager.GetString("Task_Type_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested Resources.
        /// </summary>
        internal static string Task_UnitType_DisplayName {
            get {
                return ResourceManager.GetString("Task_UnitType_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The working directory to be used during execution for this task..
        /// </summary>
        internal static string Task_WorkDirectory_Description {
            get {
                return ResourceManager.GetString("Task_WorkDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working Directory.
        /// </summary>
        internal static string Task_WorkDirectory_DisplayName {
            get {
                return ResourceManager.GetString("Task_WorkDirectory_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic Task.
        /// </summary>
        internal static string TaskTypeName_Basic {
            get {
                return ResourceManager.GetString("TaskTypeName_Basic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Prep Task.
        /// </summary>
        internal static string TaskTypeName_NodePrep {
            get {
                return ResourceManager.GetString("TaskTypeName_NodePrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node Release Task.
        /// </summary>
        internal static string TaskTypeName_NodeRelease {
            get {
                return ResourceManager.GetString("TaskTypeName_NodeRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parametric Sweep Task.
        /// </summary>
        internal static string TaskTypeName_ParametricSweep {
            get {
                return ResourceManager.GetString("TaskTypeName_ParametricSweep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Task.
        /// </summary>
        internal static string TaskTypeName_Service {
            get {
                return ResourceManager.GetString("TaskTypeName_Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to contain tracing logs cannot be null or empty  .
        /// </summary>
        internal static string TracePathCantBeNull {
            get {
                return ResourceManager.GetString("TracePathCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already have a transaction started.
        /// </summary>
        internal static string TransactionAlreadyStarted {
            get {
                return ResourceManager.GetString("TransactionAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Type property requires a value defined in enumeration JobType  .
        /// </summary>
        internal static string TypeNotDefined {
            get {
                return ResourceManager.GetString("TypeNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JobType property must be set to Service  .
        /// </summary>
        internal static string TypeNotService {
            get {
                return ResourceManager.GetString("TypeNotService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A UnitType must be specified  .
        /// </summary>
        internal static string UnitTypeMustSpecify {
            get {
                return ResourceManager.GetString("UnitTypeMustSpecify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UnitType property requires a value defined in enumeration JobUnitType  .
        /// </summary>
        internal static string UnitTypeNotDefined {
            get {
                return ResourceManager.GetString("UnitTypeNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property {0} is not known.
        /// </summary>
        internal static string UnknownProperty {
            get {
                return ResourceManager.GetString("UnknownProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username cannot be null or empty  .
        /// </summary>
        internal static string UsernameCantBeNull {
            get {
                return ResourceManager.GetString("UsernameCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UserName property requires a string value.
        /// </summary>
        internal static string UserNameNotString {
            get {
                return ResourceManager.GetString("UserNameNotString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only 0 and 1 can be used for boolean variables..
        /// </summary>
        internal static string Wrong_Integer_For_Boolean {
            get {
                return ResourceManager.GetString("Wrong_Integer_For_Boolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String was not recognized as a valid Boolean..
        /// </summary>
        internal static string Wrong_String_For_Boolean {
            get {
                return ResourceManager.GetString("Wrong_String_For_Boolean", resourceCulture);
            }
        }
    }
}
