//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Hpc.Scheduler
{
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Hpc.Scheduler.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Remote command canceled by user..
        /// </summary>
        internal static string RemoteCommand_Canceled
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_Canceled", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid remote command ID: task {1} has no stdoutput file..
        /// </summary>
        internal static string RemoteCommand_InvalidCommandJob_NoOutput
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_InvalidCommandJob_NoOutput", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid remote command ID: task {1} does not have a required node..
        /// </summary>
        internal static string RemoteCommand_InvalidCommandJob_NoRequiredNodes
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_InvalidCommandJob_NoRequiredNodes", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid remote command ID: task {1} has more than one required nodes..
        /// </summary>
        internal static string RemoteCommand_InvalidCommandJob_TooManyRequiredNodes
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_InvalidCommandJob_TooManyRequiredNodes", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Only Admin Jobs can be opened as remote commands..
        /// </summary>
        internal static string RemoteCommand_InvalidJobType
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_InvalidJobType", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Invalid node selection..
        /// </summary>
        internal static string RemoteCommand_InvalidNodeSelection
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_InvalidNodeSelection", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The output directory cannot be null or empty..
        /// </summary>
        internal static string RemoteCommand_InvalidOutputDirectory
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_InvalidOutputDirectory", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Remote command.
        /// </summary>
        internal static string RemoteCommand_JobName
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_JobName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Admin jobs must specify a set of Requested Nodes..
        /// </summary>
        internal static string RemoteCommand_NoAskedNodes
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_NoAskedNodes", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to There is no output buffer for a remote command created in file output mode..
        /// </summary>
        internal static string RemoteCommand_NoBufferForOutput
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_NoBufferForOutput", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Cannot open output stream because output is on compute node&apos;s local disk {0}..
        /// </summary>
        internal static string RemoteCommand_NoLocalPath
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_NoLocalPath", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to No nodes were provided to run the command on..
        /// </summary>
        internal static string RemoteCommand_NoNodeList
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_NoNodeList", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to None of the headnodes of the cluster are reachable..
        /// </summary>
        internal static string RemoteCommand_NoReachableHeadNode
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_NoReachableHeadNode", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to There is no output stream for a remote command created in immediate output mode..
        /// </summary>
        internal static string RemoteCommand_NoStreamForOutput
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_NoStreamForOutput", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Command output proxy has failed..
        /// </summary>
        internal static string RemoteCommand_ProxyFailed
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_ProxyFailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Remote command Proxy.
        /// </summary>
        internal static string RemoteCommand_ProxyTaskName
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_ProxyTaskName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Remote command.
        /// </summary>
        internal static string RemoteCommand_TaskName
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_TaskName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Node is unknown..
        /// </summary>
        internal static string RemoteCommand_UnknownNode
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_UnknownNode", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Command could not start on unreachable node..
        /// </summary>
        internal static string RemoteCommand_UnreachabeNode
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_UnreachabeNode", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A remote command cannot be started from state {0}..
        /// </summary>
        internal static string RemoteCommand_WrongStateToStart
        {
            get
            {
                return ResourceManager.GetString("RemoteCommand_WrongStateToStart", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Unknown property: {0}..
        /// </summary>
        internal static string SchedulerError_Validation_PropertyUnknown
        {
            get
            {
                return ResourceManager.GetString("SchedulerError_Validation_PropertyUnknown", resourceCulture);
            }
        }
    }
}
